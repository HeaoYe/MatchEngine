本期大纲

    1.PBRT有点难,以后再慢慢学习,趁假期试着做一个游戏引擎 !!!!!!!!!!!

    2.搭建基本框架,渲染部分直接用Match渲染引擎
    https://github.com/HeaoYe/Match

本期大纲

    1.改变了代码风格,类的成员函数变为小驼峰命名

    2.运行时系统的加载框架

    3.日志系统

本期大纲

    1.事件系统

    2.用户接口

本期大纲

    1.窗口系统

    2.输入系统

本期大纲

    1.序列化与反序列化

本期大纲

    1.反射系统 以及如何使用

    2.MatchEngine解析器, 用于解析指定头文件内的类, 并生成反射与序列化的信息

    3.由MatchEngine解析器 自动生成代码

本期大纲

    1.将反射系统集成到引擎中

    2.处理反射和序列化中类的继承关系

本期大纲
    
    1.反射接口修改

    2.基础GamePlay架构

本期大纲

    1.Hyprland更新默认壁纸了!!!!!!!!!!!

    2.基础渲染系统,支持多种mesh的合批渲染,每个相机一次DrawCall就能渲染出场景

    3.相机组件,允许每个相机捕获自己看到的画面

    4.下集修复DepthBuffer的Bug

本期大纲

    1.修复了DepthBuffer的Bug

    2.改进渲染系统, 支持多级LOD, 支持视锥体剔除, 完全使用GPU Driven Pipeline

    3.资产系统

本期大纲

    1.定时器系统

    2.集成相机组件

    3.MatchEditor 游戏引擎编辑器

    4.多级Lod可视化演示

本期大纲

    1.支持7级LOD了，原来是6级

    2.重写了渲染器

    3.支持遮挡剔除，GPU Driven Hierarchical Z-Buffer Occlusion Culling

    4.支持固定裁剪相机

    5.支持垂直同步

本期大纲

    1.使用 Visibility Buffer

    2.性能情况，使用Nsight分析性能
    // 因为编辑器对性能有影响，暂时关掉
    // (1) 创建Hierarchical Z-Buffer花费50微秒
    // (2) 收集并剔除所有实例，花费27微秒
    // (3) 四次DrawCall，绘制不同Lod的模型到DepthBuffer和VisibilityBuffer，花费3微秒
    // (4) 根据VisibilityBuffer，上色，花费7微秒
    // (5) 共计90微秒
